name: CI and Sonar Analysis

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Start SonarQube container (No security, skip ES checks)
        run: |
          docker run -d --name sonar \
            -p 9000:9000 \
            -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true \
            -e SONAR_SECURITY_REALM=none \
            -e SONAR_SECURITY_STRATEGY=none \
            sonarqube:community

          echo "Waiting for SonarQube to be ready..."
          sudo apt-get update -y
          sudo apt-get install -y jq

          for i in {1..20}; do
            STATUS=$(curl -s http://localhost:9000/api/system/status | jq -r .status || true)
            echo "SonarQube status: $STATUS"
            if [ "$STATUS" = "UP" ]; then
              echo "SonarQube is up!"
              break
            fi
            echo "SonarQube not ready yet... attempt $i"
            sleep 15
          done

          if [ "$STATUS" != "UP" ]; then
            echo "SonarQube did not start in time. Exiting..."
            exit 1
          fi

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Install SonarScanner for .NET
        run: |
          dotnet tool install --global dotnet-sonarscanner --version 9.0.2
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: SonarScanner Begin
        run: |
          dotnet sonarscanner begin \
            /k:"csharp" \
            /d:sonar.host.url="http://localhost:9000" \
            /d:sonar.cs.opencover.reportsPaths="tests/UnitTestingBasics.Tests/**/coverage.opencover.xml"

      - name: Build
        run: dotnet build unit-testing-basics.sln --configuration Debug

      - name: Test with Coverage
        run: |
          dotnet test unit-testing-basics.sln \
            --collect:"XPlat Code Coverage" \
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

      - name: SonarScanner End
        run: dotnet sonarscanner end

      - name: Check SonarQube logs
        if: always()
        run: docker logs sonar
